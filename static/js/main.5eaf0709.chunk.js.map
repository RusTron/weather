{"version":3,"sources":["variables/index.js","store/reducers/placesReducer.js","store/reducers/weatherReducer.js","store/reducers/loadingReducer.js","store/index.js","components/Header/Header.jsx","components/PlacesInput/PlacesInput.jsx","axios/index.js","components/TemperatureChart/TemperatureChart.jsx","App.js","reportWebVitals.js","index.js"],"names":["SET_NEW_COORDINATES","SET_NEW_ADDRESS","SELECTED_ADDRESS","SET_TEMPERATURE","LOADED_DATA","placesActions","address","type","payload","initialState","lat","lng","selectedAddress","weatherActions","newTemperature","data","loadingActions","value","loaded","rootReducer","combineReducers","places","state","action","weather","loading","store","createStore","Header","className","href","target","rel","PlacesInput","dispatch","useDispatch","selectedPlace","useSelector","changeAddress","newValue","getTemperatureFromServer","latLng","axios","get","getData","then","res","list","map","item","date","dt_txt","temp","main","toFixed","changeLoading","handleSelect","a","geocodeByAddress","results","getLatLng","console","log","onChange","onSelect","searchOptions","types","highlightFirstSuggestion","getInputProps","suggestions","getSuggestionItemProps","placeholder","length","suggestion","key","description","TemperatureChart","i","split","time","slice","temperature","index","actualDates","useMemo","dates","filter","arr","shift","pop","width","height","strokeDasharray","dataKey","interval","angle","dx","stroke","activeDot","r","style","paddingLeft","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5eaf0709.chunk.js","sourcesContent":["export const SET_NEW_COORDINATES = 'SET_NEW_COORDINATES';\nexport const SET_NEW_ADDRESS = 'SET_NEW_ADDRESS';\nexport const SELECTED_ADDRESS = 'SELECTED_ADDRESS';\nexport const SET_TEMPERATURE = 'SET_TEMPERATURE';\nexport const LOADED_DATA = 'LOADED_DATA';\n","import {\n  SET_NEW_COORDINATES,\n  SET_NEW_ADDRESS,\n  SELECTED_ADDRESS,\n} from '../../variables';\n\nexport const placesActions = {\n  setCoordinates: (newCoordinates) => ({\n    type: SET_NEW_COORDINATES,\n    payload: newCoordinates,\n  }),\n  setAddress: (address) => ({\n    type: SET_NEW_ADDRESS,\n    payload: address,\n  }),\n  setSelectedAddress: (address) => ({\n    type: SELECTED_ADDRESS,\n    payload: address,\n  }),\n};\n\nconst initialState = {\n  lat: null,\n  lng: null,\n  address: '',\n  selectedAddress: '',\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case SET_NEW_COORDINATES:\n      return { ...state, lat: action.payload.lat, lng: action.payload.lng };\n    case SET_NEW_ADDRESS:\n      return { ...state, address: action.payload };\n    case SELECTED_ADDRESS:\n      return { ...state, selectedAddress: action.payload };\n    default:\n      return state;\n  }\n};\n","import { SET_TEMPERATURE } from '../../variables';\n\nexport const weatherActions = {\n  setTemperature: (newTemperature) => ({\n    type: SET_TEMPERATURE,\n    payload: newTemperature,\n  }),\n};\n\nconst initialState = {\n  data: null,\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case SET_TEMPERATURE:\n      return { ...state, data: action.payload };\n    default:\n      return state;\n  }\n};\n","import { LOADED_DATA } from '../../variables';\n\nexport const loadingActions = {\n  setLoading: (value) => ({\n    type: LOADED_DATA,\n    payload: value,\n  }),\n};\n\nconst initialState = {\n  loaded: false,\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case LOADED_DATA:\n      return { ...state, loaded: action.payload };\n    default:\n      return state;\n  }\n};\n","import { createStore, combineReducers } from 'redux';\n// import { composeWithDevTools } from 'redux-devtools-extension';\nimport placesReducer from './reducers/placesReducer';\nimport weatherReducer from './reducers/weatherReducer';\nimport loadingReducer from './reducers/loadingReducer';\n\nconst rootReducer = combineReducers({\n  places: placesReducer,\n  weather: weatherReducer,\n  loading: loadingReducer,\n});\n\nconst store = createStore(\n  rootReducer,\n);\n\nexport default store;\n","import React from 'react';\nimport './Header.scss';\n\nexport const Header = () => (\n  <header className=\"App-header\">\n    <span\n      className=\"App-title\"\n      href=\"https://reactjs.org\"\n      target=\"_blank\"\n      rel=\"noopener noreferrer\"\n    >\n      Weather Forecast\n    </span>\n  </header>\n);\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport PlaceAutocomplete, {\n  geocodeByAddress,\n  getLatLng,\n} from 'react-places-autocomplete';\nimport { placesActions } from '../../store/reducers/placesReducer';\nimport { weatherActions } from '../../store/reducers/weatherReducer';\nimport { loadingActions } from '../../store/reducers/loadingReducer';\nimport './PlacesInput.scss';\nimport { getData } from '../../axios';\n\nexport const PlacesInput = () => {\n  const dispatch = useDispatch();\n  const selectedPlace = useSelector(({ places }) => places);\n  const loaded = useSelector(({ loading }) => loading.loaded);\n\n  const changeAddress = (newValue) => {\n    const action = placesActions.setAddress(newValue);\n    dispatch(action);\n  };\n\n  const selectedAddress = (address) => {\n    const action = placesActions.setSelectedAddress(address);\n    dispatch(action);\n  };\n\n  const getTemperatureFromServer = (latLng) => {\n    getData(latLng).then((res) => {\n      const action = weatherActions.setTemperature(res.data.list\n        .map((item) => ({ date: item.dt_txt, temp: +(item.main.temp - 273.15).toFixed(2) })));\n      dispatch(action);\n    });\n  };\n\n  const changeLoading = (value) => {\n    const action = loadingActions.setLoading(value);\n    dispatch(action);\n  };\n\n  const searchOptions = {\n    types: ['(cities)'],\n  };\n\n  const handleSelect = async (value) => {\n    try {\n      const results = await geocodeByAddress(value);\n      const latLng = await getLatLng(results[0]);\n      changeAddress(value);\n      selectedAddress(value);\n      getTemperatureFromServer(latLng);\n      changeLoading(true);\n      console.log(results);\n    } catch (e) {\n      console.log(e);// eslint-disable-line\n    }\n  };\n\n  return (\n    <div className=\"form-input\">\n      <PlaceAutocomplete\n        value={selectedPlace.address}\n        onChange={changeAddress}\n        onSelect={handleSelect}\n        searchOptions={searchOptions}\n        highlightFirstSuggestion\n      >\n        {({\n          getInputProps,\n          suggestions,\n          getSuggestionItemProps,\n          loading,\n        }) => (\n          <div>\n            <input\n              {...getInputProps({// eslint-disable-line\n                placeholder: 'Type address',\n                className: 'form-control',\n                'aria-haspopup': true,\n              })}\n            />\n            <div className=\"mt-2 position-relative\">\n              {loading ? (\n                <div className=\"dropdown-menu\">...loading</div>\n              ) : (\n                suggestions\n                && suggestions.length > 0 && (\n                  <div className=\"dropdown-menu show\">\n                    {suggestions.map((suggestion) => (\n                      <div\n                        {...getSuggestionItemProps(suggestion, {// eslint-disable-line\n                          className: 'dropdown-item',\n                          key: suggestion.description,\n                        })}\n                      >\n                        {suggestion.description}\n                      </div>\n                    ))}\n                  </div>\n                )\n              )}\n            </div>\n          </div>\n        )}\n      </PlaceAutocomplete>\n      {loaded ? (\n        <h2 className=\"title\">\n          {`Прогноз погоды в ${selectedPlace.selectedAddress} на ближайшие 5 суток`}\n        </h2>\n      ) : (\n        <h2 className=\"title\">\n          Введите населенный пункт\n        </h2>\n      )}\n    </div>\n  );\n};\n","import axios from 'axios';\n\nconst API_KEY = 'bad46dfee1ae1125ec4faf31e63449de';\n\nexport const getData = ({ lat, lng }) => axios\n  .get(`http://api.openweathermap.org/data/2.5/forecast?lat=${lat}&lon=${lng}&appid=${API_KEY}`);\n","import React, { useMemo } from 'react';\nimport { useSelector } from 'react-redux';\nimport {\n  LineChart, Line, XAxis, YAxis, CartesianGrid,\n} from 'recharts';\nimport './TemperatureChart.scss';\n\nexport const TemperatureChart = () => {\n  const temp = useSelector(({ weather }) => {\n    if (weather.data) {\n      return weather.data.map((item, i) => ({\n        date: item.date.split(/ /g)[0],\n        time: item.date.split(/ /g)[1].slice(0, 5),\n        temperature: item.temp,\n        index: i,\n      }));\n    }\n    return null;\n  });\n\n  const actualDates = useMemo(() => {\n    let dates = null;\n    if (temp) {\n      dates = temp.filter((item, i, arr) => i === 0 || item.date !== arr[i - 1].date);\n      if (dates[1].index <= 4) {\n        dates.shift();\n      } else {\n        dates.pop();\n      }\n\n      return dates;\n    }\n\n    return null;\n  }, [temp]);\n  console.log(temp);\n\n  return (\n    <div className=\"weather\">\n      {temp !== null && (\n        <>\n          <LineChart\n            width={1200}\n            height={300}\n            data={temp}\n          >\n            <CartesianGrid strokeDasharray=\"3 3\" />\n            <XAxis\n              dataKey=\"time\"\n              interval={1}\n              angle={0}\n              dx={10}\n            />\n            <YAxis type=\"number\" />\n            <Line\n              type=\"monotone\"\n              dataKey=\"temperature\"\n              stroke=\"#8884d8\"\n              activeDot={{ r: 1 }}\n            />\n          </LineChart>\n          <div\n            className=\"weather__dates\"\n            style={{\n              paddingLeft: actualDates[0].index\n                ? `${100 + ((actualDates[0].index + actualDates[1].index / 2) * 10)}px`\n                : '50px',\n            }}\n          >\n            {actualDates.map((item) => (\n              <span\n                className=\"weather__dates-item\"\n                key={item.date}\n              >\n                {item.date}\n              </span>\n            ))}\n          </div>\n        </>\n      )}\n    </div>\n  );\n};\n","import React from 'react';\nimport { Header } from './components/Header';\nimport './App.scss';\nimport { PlacesInput } from './components/PlacesInput';\nimport { TemperatureChart } from './components/TemperatureChart';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <PlacesInput />\n      <TemperatureChart />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({\n      getCLS, getFID, getFCP, getLCP, getTTFB,\n    }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root'),\n);\n\nreportWebVitals();\n"],"sourceRoot":""}